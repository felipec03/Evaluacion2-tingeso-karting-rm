# Microservice Configuration: ms-tarifasconfig
server.port=8091
spring.application.name=ms-tarifasconfig

# Database Configuration
# Use environment variables for sensitive data and host information
spring.datasource.url=jdbc:postgresql://${DB_HOST_TARIFAS:localhost}:5432/${DB_NAME_TARIFAS:tarifas_db}
spring.datasource.username=${DB_USERNAME_TARIFAS:postgres}
spring.datasource.password=${DB_PASSWORD_TARIFAS:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
# create-drop: drops the schema at the end of the session (useful for dev/test)
# validate: validates the schema, makes no changes to the database.
# update: updates the schema.
# create: creates the schema, destroying previous data.
# none: does nothing.
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Initialize the database with schema and data if data.sql is present
spring.sql.init.mode=always
# Defer datasource initialization to allow JPA to create the schema first
spring.jpa.defer-datasource-initialization=true

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE