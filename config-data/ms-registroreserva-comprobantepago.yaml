server:
  port: 0 

spring:
  application:
    name: ms-registroreserva-comprobantepago
  datasource:
    url: ${SPRING_DATASOURCE_URL_MS5}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update # o create, validate, none según estrategia
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: felipe.cubillos.a@usach.cl # Considera usar variables de entorno para esto también
    password: devh aqgr ouhn pnkv # ¡¡¡MUY IMPORTANTE: NO COMMITAR CONTRASEÑAS REALES!!! Usar Secrets o variables de entorno.
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      # Adicional para Gmail si es necesario (puede que no lo sea con starttls)
      # mail.smtp.ssl.trust: "smtp.gmail.com"
      # mail.smtp.ssl.protocols: "TLSv1.2"

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eureka-server-service:8761/eureka/ # URL del servicio Eureka en Kubernetes